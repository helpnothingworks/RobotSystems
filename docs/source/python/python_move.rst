.. note::

    Bonjour et bienvenue dans la communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et √† des avant-go√ªts exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions et concours festifs** : Participez √† des concours et promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_move:

1. Faites bouger PiCar-X
=============================

Voici le premier projet, testons les mouvements de base de PiCar-X.

**Ex√©cuter le code**

.. raw:: html

    <run></run>

.. code-block::

    cd ~/picar-x/example
    sudo python3 1.move.py

Apr√®s avoir ex√©cut√© le code, PiCar-X avancera, effectuera un virage en forme de S, s'arr√™tera et secouera sa t√™te.

**Code**

.. note::
    Vous pouvez **Modifier/R√©initialiser/Copier/Ex√©cuter/Arr√™ter** le code ci-dessous. Mais avant cela, vous devez vous rendre dans le chemin du code source, tel que ``picar-x/example``. Apr√®s avoir modifi√© le code, vous pouvez l'ex√©cuter directement pour voir le r√©sultat.

.. raw:: html

    <run></run>

.. code-block:: python

    from picarx import Picarx
    import time


    if __name__ == "__main__":
        try:
            px = Picarx()
            px.forward(30)
            time.sleep(0.5)
            for angle in range(0,35):
                px.set_dir_servo_angle(angle)
                time.sleep(0.01)
            for angle in range(35,-35,-1):
                px.set_dir_servo_angle(angle)
                time.sleep(0.01)        
            for angle in range(-35,0):
                px.set_dir_servo_angle(angle)
                time.sleep(0.01)
            px.forward(0)
            time.sleep(1)

            for angle in range(0,35):
                px.set_camera_servo1_angle(angle)
                time.sleep(0.01)
            for angle in range(35,-35,-1):
                px.set_camera_servo1_angle(angle)
                time.sleep(0.01)        
            for angle in range(-35,0):
                px.set_camera_servo1_angle(angle)
                time.sleep(0.01)
            for angle in range(0,35):
                px.set_camera_servo2_angle(angle)
                time.sleep(0.01)
            for angle in range(35,-35,-1):
                px.set_camera_servo2_angle(angle)
                time.sleep(0.01)        
            for angle in range(-35,0):
                px.set_camera_servo2_angle(angle)
                time.sleep(0.01)
                
        finally:
            px.forward(0)

**Comment √ßa fonctionne ?**

La fonctionnalit√© de base de PiCar-X se trouve dans le module ``picarx``, 
qui permet de contr√¥ler le servo de direction et les roues,
et fait en sorte que PiCar-X avance, tourne en forme de S ou secoue sa t√™te.

Les biblioth√®ques pour supporter les fonctions de base de PiCar-X sont maintenant import√©es. 
Ces lignes appara√Ætront dans tous les exemples impliquant le mouvement de PiCar-X.

.. code-block:: python
    :emphasize-lines: 0

    from picarx import Picarx
    import time

La fonction suivante avec la boucle ``for`` est ensuite utilis√©e pour faire avancer PiCar-X, changer de direction, et bouger la cam√©ra en mode panoramique/inclinaison.

.. code-block:: python

    px.forward(speed)    
    px.set_dir_servo_angle(angle)
    px.set_camera_servo1_angle(angle)
    px.set_camera_servo2_angle(angle)

* ``forward()`` : Ordonne √† PiCar-X d'avancer √† une ``vitesse`` donn√©e.
* ``set_dir_servo_angle`` : Tourne le servo de direction √† un ``angle`` sp√©cifique.
* ``set_cam_pan_angle`` : Tourne le servo de panoramique √† un ``angle`` sp√©cifique.
* ``set_cam_tilt_angle`` : Tourne le servo d'inclinaison √† un ``angle`` sp√©cifique.

.. image:: img/pan_tilt_servo.png
    :width: 400
