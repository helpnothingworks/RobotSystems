.. note::

    Bonjour et bienvenue dans la communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Explorez plus en profondeur le Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions et concours festifs** : Participez √† des concours et des promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_stare:

8. Vous fixer du regard
=======================

Ce projet est √©galement bas√© sur le projet :ref:`py_computer_vision`, avec l'ajout d'algorithmes de d√©tection de visage.

Lorsque vous apparaissez devant la cam√©ra, elle reconna√Æt votre visage et ajuste son cardan pour garder votre visage au centre du cadre.

Vous pouvez visionner l'√©cran √† l'adresse ``http://<your IP>:9000/mjpg``.

**Ex√©cuter le code**

.. raw:: html

    <run></run>

.. code-block::

    cd ~/picar-x/example
    sudo python3 8.stare_at_you.py

Une fois le code ex√©cut√©, la cam√©ra de la voiture suivra toujours votre visage.

**Code**

.. code-block:: python

    from picarx import Picarx
    from time import sleep
    from vilib import Vilib

    px = Picarx()

    def clamp_number(num,a,b):
        return max(min(num, max(a, b)), min(a, b))

    def main():
        Vilib.camera_start()
        Vilib.display()
        Vilib.face_detect_switch(True)
        x_angle =0
        y_angle =0
        while True:
            if Vilib.detect_obj_parameter['human_n']!=0:
                coordinate_x = Vilib.detect_obj_parameter['human_x']
                coordinate_y = Vilib.detect_obj_parameter['human_y']
                
                # change the pan-tilt angle for track the object
                x_angle +=(coordinate_x*10/640)-5
                x_angle = clamp_number(x_angle,-35,35)
                px.set_cam_pan_angle(x_angle)

                y_angle -=(coordinate_y*10/480)-5
                y_angle = clamp_number(y_angle,-35,35)
                px.set_cam_tilt_angle(y_angle)

                sleep(0.05)

            else :
                pass
                sleep(0.05)

    if __name__ == "__main__":
        try:
            main()
        
        finally:
            px.stop()
            print("stop and exit")
            sleep(0.1)

**Comment √ßa fonctionne ?**

Ces lignes de code dans la boucle ``while True`` permettent √† la cam√©ra de suivre le visage.

.. code-block:: python

    while True:
        if Vilib.detect_obj_parameter['human_n']!=0:
            coordinate_x = Vilib.detect_obj_parameter['human_x']
            coordinate_y = Vilib.detect_obj_parameter['human_y']
            
            # modifier l'angle de panoramique/inclinaison pour suivre l'objet
            x_angle +=(coordinate_x*10/640)-5
            x_angle = clamp_number(x_angle,-35,35)
            px.set_cam_pan_angle(x_angle)

            y_angle -=(coordinate_y*10/480)-5
            y_angle = clamp_number(y_angle,-35,35)
            px.set_cam_tilt_angle(y_angle)

1. V√©rifiez s'il y a un visage humain d√©tect√©

    .. code-block:: python

        Vilib.detect_obj_parameter['human_n'] != 0

2. Si un visage humain est d√©tect√©, obtenez les coordonn√©es (``coordinate_x`` et ``coordinate_y``) du visage d√©tect√©.

3. Calculez les nouveaux angles de panoramique et d'inclinaison (``x_angle`` et ``y_angle``) en fonction de la position du visage d√©tect√© et ajustez-les pour suivre le visage.

4. Limitez les angles de panoramique et d'inclinaison dans les plages sp√©cifi√©es √† l'aide de la fonction ``clamp_number``.

5. R√©glez les angles de panoramique et d'inclinaison de la cam√©ra √† l'aide de ``px.set_cam_pan_angle()`` et ``px.set_cam_tilt_angle()``.
