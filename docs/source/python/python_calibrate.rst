.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _py_calibrate:

0. PiCar-Xの校正
=================================

モーターとサーボの校正
---------------------------

PiCar-Xの取り付け中やサーボ自体の限界により、サーボの角度が多少傾くことがあるため、校正が可能です。

もちろん、組み立てが完璧で校正が不要だと思われる場合は、この章をスキップしても構いません。

#. ``calibration.py`` を実行します。

    .. raw:: html

        <run></run>

    .. code-block::

        cd ~/picar-x/example/calibration
        sudo python3 calibration.py

#. コードを実行すると、端末に以下のインターフェースが表示されます。

    .. image:: img/calibrate1.png

#. ``R`` キーは、3 つのサーボが正常に動作しているかど うかをテストするために使用します。 ``1``、 ``2`` 、 ``3`` キーでサーボを選択したら、 ``R`` キーを押してそのサーボをテストします。

#. 数字キー ``1`` を押して前輪サーボを選択し、その後 ``W/S`` キーを押して前輪が左右に傾かずに可能な限り前を向くようにします。

    .. image:: img/calibrate2.png

#. 数字キー ``2`` を押して **Pan servo** を選択し、その後 ``W/S`` キーを押してパン/チルトプラットフォームが真っ直ぐ前を向き、左右に傾かないようにします。

    .. image:: img/calibrate3.png

#. 数字キー ``3`` を押して **tilt servo** を選択し、その後 ``W/S`` キーを押してパン/チルトプラットフォームが真っ直ぐ前を向き、上下に傾かないようにします。

    .. image:: img/calibrate4.png

#. 取り付け中にモーターの配線が逆になっている可能性があるため、 ``E`` を押して車が正常に前進できるかどうかをテストします。そうでない場合は、数字キー ``4`` と ``5`` を使用して左右のモーターを選択し、その後 ``Q`` キーを押して回転方向を校正します。

    .. image:: img/calibrate6.png

#. 校正が完了したら、 ``Spacebar`` を押して校正パラメータを保存します。確認のために ``y`` と入力するプロンプトが表示されたら、 ``Ctrl+C`` を押してプログラムを終了し、校正を完了します。

    .. image:: img/calibrate5.png


グレースケールモジュールの校正
-------------------------------

環境条件や照明状況の違いにより、グレースケールモジュールのプリセットパラメータが最適でない場合があります。
このプログラムを通じて設定を微調整し、より良い結果を得ることができます。


#. 明るい色の床に約15cmの黒い電気テープを敷き、PiCar-Xをテープの上に乗せます。このセットアップでは、グレースケールモジュールの中央センサーがテープの真上に、両サイドのセンサーがより明るい表面の上に来るようにします。


#. ``grayscale_calibration.py`` を実行します。

    .. raw:: html

        <run></run>

    .. code-block::

        cd ~/picar-x/example/calibration
        sudo python3 grayscale_calibration.py

#. コードを実行すると、端末に以下のインターフェースが表示されます。

    .. image:: img/calibrate_g1.png

#. 「Q」キーを押してグレースケール校正を開始します。するとPiCar-Xが左右に小さな動きをします。このプロセス中に、3つのセンサーがそれぞれ少なくとも一度は電気テープを横切るようにします。


#. また、「threshold value」セクションには3つのペアの大きく異なる値が表示され、一方で「line reference」にはそれぞれのペアの平均値となる2つの中間値が表示されます。

    .. image:: img/calibrate_g2.png

#. 次に、PiCar-Xを宙に浮かせたり（または崖の端に置いたり）して「E」キーを押します。すると、「cliff reference」の値もそれに応じて更新されます。

    .. image:: img/calibrate_g3.png

#. すべての値が正確であることを確認したら、「space」キーを押してデータを保存します。その後、Ctrl+Cを押してプログラムを終了できます。
